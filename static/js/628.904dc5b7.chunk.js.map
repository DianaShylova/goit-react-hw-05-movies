{"version":3,"file":"static/js/628.904dc5b7.chunk.js","mappings":"sRACA,EAA0C,8CAA1C,EAAsG,kCAAtG,EAA4J,wCAA5J,EAAiN,iCAAjN,EAAkQ,oCAAlQ,EAAgT,8BAAhT,EAA4V,kC,SC+D5V,EA1DqB,WAAO,IAAD,EACvB,GAAsCA,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAMhD,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,MAAK,SAAAC,GAAI,OAAIZ,EAAeY,EAAnB,GACnC,GAAC,CAACX,IAECF,EAAJ,CAEA,IAAQc,EACNd,EADMc,eAAgBC,EACtBf,EADsBe,SAAUC,EAChChB,EADgCgB,OAAQC,EACxCjB,EADwCiB,YAAaC,EACrDlB,EADqDkB,aAGvD,OACE,iBAAKC,KAAG,EAACC,UAAWC,EAApB,WACE,SAAC,KAAD,CAAMC,GAAIhB,EAASiB,QAASH,UAAWC,EAAvC,SAAwD,aACxD,0BACE,gBAAKD,UAAWC,EACdG,IACEP,EAAW,yCAC2BA,GAD3B,UAEJQ,GAGTC,QAAQ,OACRC,IAAI,cAGR,cAAGP,UAAWC,EAAd,SAA+BP,KAC/B,wBAAI,cACJ,eAAGM,UAAWC,EAAd,UAAkCN,EAAS,QAC3C,wBAAI,YACJ,uBAAIG,KACJ,wBACGF,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,OAId,wBAAI,4BACJ,gBAAIT,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMC,GAAE,OAAUF,UAAWC,EAA7B,SAA8C,YAEhD,0BACG,KACD,SAAC,KAAD,CAAMC,GAAE,UAAaF,UAAWC,EAAhC,SAAiD,mBAGtD,SAAC,EAAAU,SAAD,CAAUC,UAAU,uBAAG,eAAvB,UACG,SAAC,KAAD,QAzCiB,CA8CxB,C,sLC1DKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvB1B,EADuB,EACvBA,KADuB,kBAExBA,EAAK2B,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,GAAP,yFACLT,EAASM,IAAT,8BAAoCG,IAD/B,uBACpB7B,EADoB,EACpBA,KADoB,kBAErBA,EAAK2B,SAFgB,2CAAH,sDAKd7B,EAAe,mCAAG,WAAMT,GAAN,yFACN+B,EAASM,IAAT,iBAAuBrC,IADjB,uBACrBW,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf8B,EAAO,mCAAG,WAAMzC,GAAN,yFACE+B,EAASM,IAAT,iBAAuBrC,EAAvB,aADF,uBACbW,EADa,EACbA,KADa,kBAEdA,EAAK+B,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAM3C,GAAN,yFACD+B,EAASM,IAAT,iBAAuBrC,EAAvB,aADC,uBAChBW,EADgB,EAChBA,KADgB,kBAEjBA,EAAK2B,SAFY,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","service/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_details_container\":\"MovieDetails_movie_details_container__1Y8nf\",\"back_button\":\"MovieDetails_back_button__C0LYP\",\"movie_details_pic\":\"MovieDetails_movie_details_pic__Xuz5G\",\"film_title\":\"MovieDetails_film_title__vOz8F\",\"overview_info\":\"MovieDetails_overview_info__ejQy5\",\"addinfo\":\"MovieDetails_addinfo__Sk+L5\",\"addinfo_btn\":\"MovieDetails_addinfo_btn__+TL13\"};","import { useEffect, useRef, useState, Suspense } from \"react\";\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"service/moviesApi\";\nimport nofilmposter from \"../../components/DefaultImg/film.jpg\"\nimport css from \"./MovieDetails.module.css\"\n\nconst MovieDetails = () => {\n    const [movieDetail, setMovieDetail] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n  const backLink = useRef(location.state?.from || '/'); \n \n  useEffect(()=>{\n    getMovieDetails(movieId).then(data => setMovieDetail(data))\n  },[movieId]);\n\n  if(!movieDetail) return;\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetail;\n\n  return (\n    <div div className={css.movie_details_container}>\n      <Link to={backLink.current} className={css.back_button}>Go back</Link>\n      <div >\n        <img className={css.movie_details_pic}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `${nofilmposter}`\n          }\n          \n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n      </div>\n      <p className={css.film_title}>{original_title}</p>\n      <h3>Overview</h3>\n      <p className={css.overview_info}>{overview} </p>\n      <h3>Genres</h3>\n      <p>{vote_average}</p>\n      <ul>\n        {genres.map(({ id, name }) => (\n          <li key={id}>{name}</li>\n        ))}\n      </ul>\n      <h4>Additional information</h4>\n      <ul className={css.addinfo}>\n        <li>\n          <Link to={`cast`} className={css.addinfo_btn}>Cast</Link>\n        </li>\n        <li>\n          {' '}\n          <Link to={`reviews`} className={css.addinfo_btn}>Reviews</Link>\n        </li>\n      </ul>\n     <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n  \n}\n\nexport default MovieDetails","import axios from \"axios\";\n//API Key: f404d8da11cbab86424013df50425b60;\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'f404d8da11cbab86424013df50425b60',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const getSearchMovie = async (query) => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};"],"names":["useState","movieDetail","setMovieDetail","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getMovieDetails","then","data","original_title","overview","genres","poster_path","vote_average","div","className","css","to","current","src","nofilmposter","loading","alt","map","id","name","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrendingMovies","get","results","getSearchMovie","query","getCast","cast","getReviews"],"sourceRoot":""}