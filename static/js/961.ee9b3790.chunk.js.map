{"version":3,"file":"static/js/961.ee9b3790.chunk.js","mappings":"sMAgEA,UA3DqB,WAAO,IAAD,EACvB,GAAsCA,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAMhD,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAASU,MAAK,SAAAC,GAAI,OAAIZ,EAAeY,EAAnB,GACnC,GAAC,CAACX,IAECF,EAAJ,CAEA,IAAQc,EACNd,EADMc,eAAgBC,EACtBf,EADsBe,SAAUC,EAChChB,EADgCgB,OAAQC,EACxCjB,EADwCiB,YAAaC,EACrDlB,EADqDkB,aAGvD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIb,EAASc,QAAnB,SAA4B,aAC5B,0BACE,gBACEC,IACEJ,EAAW,yCAC2BA,GAD3B,+CAIbK,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,cAGR,uBAAIX,KACJ,wBAAI,cACJ,yBAAIC,EAAS,QACb,wBAAI,YACJ,uBAAIG,KACJ,wBACGF,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,OAId,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMR,GAAE,OAAR,SAAkB,YAEpB,0BACG,KACD,SAAC,KAAD,CAAMA,GAAE,UAAR,SAAqB,mBAG1B,SAAC,EAAAU,SAAD,CAAUC,UAAU,uBAAG,eAAvB,UACG,SAAC,KAAD,QA1CiB,CA+CxB,C,sLC1DKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBxB,EADuB,EACvBA,KADuB,kBAExBA,EAAKyB,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,GAAP,yFACLT,EAASM,IAAT,8BAAoCG,IAD/B,uBACpB3B,EADoB,EACpBA,KADoB,kBAErBA,EAAKyB,SAFgB,2CAAH,sDAKd3B,EAAe,mCAAG,WAAMT,GAAN,yFACN6B,EAASM,IAAT,iBAAuBnC,IADjB,uBACrBW,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf4B,EAAO,mCAAG,WAAMvC,GAAN,yFACE6B,EAASM,IAAT,iBAAuBnC,EAAvB,aADF,uBACbW,EADa,EACbA,KADa,kBAEdA,EAAKyB,SAFS,2CAAH,sDAKPI,EAAU,mCAAG,WAAMxC,GAAN,yFACD6B,EAASM,IAAT,iBAAuBnC,EAAvB,aADC,uBAChBW,EADgB,EAChBA,KADgB,kBAEjBA,EAAKyB,SAFY,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","service/moviesApi.js"],"sourcesContent":["import { useEffect, useRef, useState, Suspense } from \"react\";\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"service/moviesApi\";\n\n\nconst MovieDetails = () => {\n    const [movieDetail, setMovieDetail] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n  const backLink = useRef(location.state?.from || '/'); \n \n  useEffect(()=>{\n    getMovieDetails(movieId).then(data => setMovieDetail(data))\n  },[movieId]);\n\n  if(!movieDetail) return;\n\n  const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetail;\n\n  return (\n    <>\n      <Link to={backLink.current}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n      </div>\n      <p>{original_title}</p>\n      <h3>Overview</h3>\n      <p>{overview} </p>\n      <h3>Genres</h3>\n      <p>{vote_average}</p>\n      <ul>\n        {genres.map(({ id, name }) => (\n          <li key={id}>{name}</li>\n        ))}\n      </ul>\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <Link to={`cast`}>Cast</Link>\n        </li>\n        <li>\n          {' '}\n          <Link to={`reviews`}>Reviews</Link>\n        </li>\n      </ul>\n     <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n  \n}\n\nexport default MovieDetails","import axios from \"axios\";\n//API Key: f404d8da11cbab86424013df50425b60;\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'f404d8da11cbab86424013df50425b60',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const getSearchMovie = async (query) => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data.results;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};"],"names":["useState","movieDetail","setMovieDetail","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getMovieDetails","then","data","original_title","overview","genres","poster_path","vote_average","to","current","src","width","height","loading","alt","map","id","name","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrendingMovies","get","results","getSearchMovie","query","getCast","getReviews"],"sourceRoot":""}